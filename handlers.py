import logging
from aiogram import types
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from database import save_city, get_popular_cities, show_user_cities
from weather import get_weather

### ‚úÖ **–ö–æ–º–∞–Ω–¥–∞ /start**
async def start_command(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã. –ù–∞–ø–∏—à–∏ /weather, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É.")

### ‚úÖ **–ö–æ–º–∞–Ω–¥–∞ /weather (–ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≥–æ—Ä–æ–¥–∞)**
async def weather_command(message: Message):
    user_id = message.from_user.id
    popular_cities = get_popular_cities(user_id)

    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    if popular_cities:
        for city in popular_cities:
            keyboard.add(KeyboardButton(city))  # ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –≥–æ—Ä–æ–¥–∞–º–∏
        keyboard.add(KeyboardButton("üåç –í–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥"))
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π:", reply_markup=keyboard)
    else:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞:", reply_markup=ReplyKeyboardRemove())

### ‚úÖ **–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –≥–æ—Ä–æ–¥–∞ (–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã)**
async def process_city(message: Message):
    city = message.text.strip()
    user_id = message.from_user.id

    weather_info = await get_weather(city)  # ‚úÖ –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤—ã–∑–æ–≤

    if "–û—à–∏–±–∫–∞" not in weather_info:
        save_city(user_id, city)  # ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ—Ä–æ–¥ –≤ –±–∞–∑—É

    await message.answer(weather_info, reply_markup=ReplyKeyboardRemove())

### ‚úÖ **–ö–æ–º–∞–Ω–¥–∞ /history (–æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é)**
async def history_command(message: Message):
    user_id = message.from_user.id
    history = show_user_cities(user_id)

    await message.answer(history)
