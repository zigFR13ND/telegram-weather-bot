import os
import logging  # üìå –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏)
import requests  # üìå –ó–∞–ø—Ä–æ—Å—ã –∫ API
from aiogram import Bot, Dispatcher, types  # üìå aiogram ‚Äì –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –¥–ª—è –±–æ—Ç–æ–≤
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton  # üìå –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–Ω–æ–ø–∫–∏
from aiogram.utils import executor  # üìå –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
from dotenv import load_dotenv # üìå –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–∫–µ–Ω–æ–º –≤ .env
from database import create_db, save_city, get_popular_cities # üìå –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

load_dotenv()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
TGBOT_API_KEY = os.getenv('TGBOT_API_KEY')  
# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
WEATHER_API_KEY = os.getenv('WEATHER_API_KEY')  

# ‚úÖ –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (—á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –æ—à–∏–±–∫–∏)
logging.basicConfig(level=logging.INFO) 

# ‚úÖ –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token=TGBOT_API_KEY) 
# ‚úÖ –°–æ–∑–¥–∞—ë–º "–¥–∏—Å–ø–µ—Ç—á–µ—Ä" (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥)
dp = Dispatcher(bot)

# ‚úÖ –°–æ–∑–¥–∞—ë–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
create_db() 

# ‚úÖ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /start
@dp.message_handler(commands=["start"])
async def start_command(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã. –ù–∞–ø–∏—à–∏ /weather, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É.")

# ‚úÖ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É /weather (–ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≥–æ—Ä–æ–¥–∞)
@dp.message_handler(commands=["weather"])
async def weather_command(message: Message):
    user_id = message.from_user.id  # üìå ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    popular_cities = get_popular_cities(user_id)  # üìå –ü–æ–ª—É—á–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –≥–æ—Ä–æ–¥–∞
#    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞:")

    # üìå –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    for city in popular_cities:
        keyboard.add(KeyboardButton(city))  # ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å –≥–æ—Ä–æ–¥–æ–º

    await message.answer("–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö:", reply_markup=keyboard)

# ‚úÖ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–≤–æ–¥ –≥–æ—Ä–æ–¥–∞
@dp.message_handler()
async def get_weather(message: Message):
    city = message.text.strip()  # üìå –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ä–æ–¥, —É–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã
    user_id = message.from_user.id
    weather_today_url = f'https://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=ru'
    weather_today_response = requests.get(weather_today_url)

    if weather_today_response.status_code == 200:
        weather_today = weather_today_response.json() # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º JSON –≤ —Å–ª–æ–≤–∞—Ä—å.
        temp = weather_today["main"]["temp"] # –î–æ—Å—Ç–∞—ë–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É.
        if temp > 0:
            temp = f'+{temp}'
        wind = weather_today["wind"]["speed"] # –î–æ—Å—Ç–∞—ë–º —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞.
        description = weather_today["weather"][0]["description"] # –î–æ—Å—Ç–∞—ë–º –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã.
        weather_today_text = (
            f"üìç –ì–æ—Ä–æ–¥: {city}\n"
            f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n"
            f"üí® –í–µ—Ç–µ—Ä: {wind} –º/—Å\n"
            f"üå§ –û–ø–∏—Å–∞–Ω–∏–µ: {description}"
        )
        save_city(user_id, city)  # ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ—Ä–æ–¥ –≤ –±–∞–∑—É
    else:
        weather_today_text = "‚ùå –û—à–∏–±–∫–∞! –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω."

    await message.answer(weather_today_text)  # üì© –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç


# ‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
